version: '2.4'

services:
  # MongoDB
  mongo:
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - './data/db:/data/db'
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      MONGO_INITDB_ROOT_USERNAME: janeDoe
      MONGO_INITDB_ROOT_PASSWORD: butterCUPz
  # local MongoDB for development
  # move to Atlas for Cloud Distribution in production

  # Express
  mernlama:
    image: mernlama:prod
    # image: mernlama:dev
    build:
      target: prod
      context: MERNlama
      dockerfile: ./Dockerfile
    environment:
      # MONGO_ADMINUSERNAME: janeDoe
      # MONGO_ADMINPASSWORD: butterCUPz
      MONGO_URL: mongodb://janeDoe:butterCUPz@mongo:27017/
      MONGO_DBNAME: mernlama
    ports:
      - 8800:8800
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./MERNlama:/usr/src/app
      # - /usr/src/app/node_modules
    healthcheck:
      test: ['CMD', 'npm run test']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"
    restart: always

  # React-Redux
  react:
    image: react:prod
    # image: react:dev
    build:
      target: prod
      context: r-frnt
      dockerfile: ./Dockerfile
    # environment:
    #   CI: 'true'
    ports:
      # - 3000:3000
      - 80:80
    depends_on:
      mongo:
        condition: service_healthy
    restart: always
    volumes:
      # - /usr/src/app/node_modules
      - ./r-frnt:/usr/src/app
      - ./r-frnt/nginx:/etc/nginx/conf.d
      # - ./nginx:/etc/nginx/conf.d
    healthcheck:
      test: ['CMD', 'CI=true npm run test']
    # depends_on:
    #   mernlama:
    #     condition: service_healthy

  # NODE
